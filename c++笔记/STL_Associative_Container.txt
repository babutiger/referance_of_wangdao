STL之关联容器
==========

Pair<type-key, type-value>
----------------------------------
关联两个类型的数据成为一个**“key-value对”**， 实现上可能是用了一个结构体。  
实际好像没啥用，需要与vector, list等合用，作为他们的元素。
一个函数：`make_pair(type-kye, type-value)`，创造一个类对象。


-----

Map<type-key, type-value>
-----------------------------------
**关键1：**是pair的容器，每个元素都是一个pair。  
**关键2：**底层由`红黑树`实现（类似AVL树），默认对`key`排序 /`(升序)`。所以，key必须支持**比较操作**！！同时，key的值不可更改（否则破坏树结构）   
**关键3：**由于其底层特性，map的查找/插入速度很快，但是无法实现对value排序。而且，`key的值必须唯一`。

####操作要点
######下标访问－May[key]
返回值：1. 如果该key存在，则返回对应value的**引用**。    
————2. 如果不存在，则插入key，并把value设为初始化值。（int即为0）
######insert(pair)方法
手动设定插入的pair对，如果key已经存在，将插入失败，请查询insert返回值。

######count(key)方法
返回key在map中的数量，（0或1），查询是否在map中
######find(key)方法
返回key对应pair的迭代器，可以对value进行修改。

-----

Set \<key> 
--------------
map的简化版本，在只需要知道是否存在时使用。同样用红黑树实现，相似。

