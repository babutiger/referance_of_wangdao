继承 inherit
========

[TOC]

###基类和派生类
**基类**，主要编写共性的内容，或者是抽象得定义。  
**派生类**，主要编写个性的内容，对基类的函数进行具体实现。  

###继承的本质
实质上是先生成一个`无名的基类对象`，然后在其内存空间后面追加派生类的内容。所以，基类中的`所有内容`都被派生类包含，只是，权限会有所不同。     
**注意：** 由于这样对象包含的机制，派生类的大小（sizeof）会有两次4B对齐，一次对于基类，一次对于派生类。

###继承的权限
**关键1：** 基类的private内容在派生类中全都不能访问   
**关键2：** 继承特性  

- 为public时，基类的其余属性全都不变
- 为protected或private时，基类的其余属性全都变为protected或private

###派生类中函数的调用
**关键1：** 函数名不同，无论是基类中的函数，还是派生类中定义的函数，都可正常调用。   
**关键2：** 函数名相同，`无论参数是否相同`，触发函数隐藏机制－－即默认调用派生类中新定义的函数，隐藏基类中的同名函数。  
问题： 如果想要调用基类的函数呢？   
答：在调用时显式加上基类的命名空间。

###派生类的构造
如果手动写，那么关键是调用基类的构造函数去初始化基类中的变量。   
**构造和析构的顺序**－－1.构造基类，2.构造派生类，3.析构派生类，4.析构基类

###派生类is基类
**关键：** 对于派生类，所有对于基类的操作都是合法的
表现1：派生类赋值给基类合法，并且会抛弃该派生类特有的属性。      
表现2：基类的指针可以指向派生类，并当作一个基类使用（无法通过此指针访问派生类特有方法和属性）


